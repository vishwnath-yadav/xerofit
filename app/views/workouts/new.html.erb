<%= render "workout_builder_header" %>

<div id="workout-builder-app" class="builder autoheight">

    <div class="column split-left">
        <div class="column-wrap autoheight">
            <%= render "library_moves_panel" %>
            <%= render "move_details_panel" %>
        </div>
    </div>

    <div class="column split-right">
        <div class="column-wrap autoheight">

            <div class="col_1" id="workout_auto_form">
                <%= render "workout_auto_form" %>
            </div>

            <div class="workout-preview">
                <%=render "block_options"%>
                <div class="builder-dropzone" id="cart">
                    <%=form_tag("/builder/save_blocks", method: "post", id: "new_workout_form") do |bl|%>

                        <%=hidden_field_tag :workout_id %>
                        <ul class="add_photo drag_lib testt" data-block="main">
                            <%= render "sub_blocks" %>
                        </ul>

                        <div class="hidden_field_workout"></div>
                    <% end %>
                </div>
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">
$(document).ready(function(){

$("#cart .testt").sortable().disableSelection();
    //now initialize the cart as a droppable for the first run
    initDroppable();
    $("#catalog ul li").draggable({
        helper: function() {
            return $("<div style='width:140px;float:left;'></div>").append($(this).clone());
        },
        connectToSortable:'#cart ul li',
        cursor: 'move', 
        cursorAt: { top: 20, left: 80 },
        zIndex: 100
    });
    $("#move ul li").draggable({
        helper: function() {
            return $("<div style='width:300px;float:left'></div>").append($(this).clone());
        },
        connectToSortable:'#cart ul li',
        cursor: 'move', 
        cursorAt: { top: 50, left: 280 },
        zIndex: 100
    });
    flag = true;
})

function initDroppable() {
        $("#cart ul li").droppable({
            accept: "#catalog ul li, #move ul li",
            hoverClass: "ui-state-hover",
            over: function( event, ui ) {
                console.log(">>>>>>>>>>>")
                console.log($(this));
                console.log($(this).parent().attr('data-block'))
                console.log(">>>>>>>>>>>")
                if($(this).parent().attr('data-block') == "block"){
                    flag = false;
                }
                else{
                    flag = true;
                }
            },
            drop: function(event, ui) {
                if($(".drag_img").length){
                    $(".drag_img").remove();
                }
                var $this = $(this);
                var $parent = $this.parent();
                var drag_type = ui.draggable.attr('data-dragable-type');
                //var li_count = get_li_count();
                var block_name = BLOCK_TYPE[3];
                var lib_id = '';
                if(drag_type == "block"){
                    if($parent.attr('data-block') == "main"){
                        block_name = ui.draggable.attr("data-block-name");
                        if(block_name == BLOCK_TYPE[2]){
                            $this.after('<li class="water_block"><div class="water_hr"></div><div class="water_head">'+block_name+'</div></li>');
                                block_name = block_name;         
                                save_details(lib_id, block_name, drag_type, $this);             
                          }
                        else {
                            $this.after('<li class="main_container"><div><span class="first">'+block_name+'</span><ul class="add_photo drag_lib wrk_block testt" data-block="block" data-block-name="'+block_name+'"><li class="first"></li></ul></div></li>');
                            save_details(lib_id, block_name, drag_type, $this);
                        }
                    }
                    else{
                        alert("Blcok inside block is not allowed.");
                        event.preventDefault();
                        return false;
                    }

                }
                else {
                    lib_id = ui.draggable.attr('data-move-id');
                    var text = $.trim(ui.draggable.text());
                    if($parent.attr('data-block') == "block"){
                        block_name = $parent.attr('data-block-name');
                        $this.after('<li class="others load_lib_detail">'+text+'</li>');
                        save_details(lib_id, block_name, drag_type, $this);
                    }
                    else if($parent.attr('data-block') == "main"){
                        if(flag){
                            $this.after('<li class="single_move main_container load_lib_detail"><div class="single_div">'+text+'</div></li>');
                            save_details(lib_id, block_name, drag_type, $this);
                        }
                    }
                }
                initDroppable();
                $("#cart .testt").sortable().disableSelection();

                event.preventDefault();
                return false;
            }
        });
    }
    
    function save_details(lib_id, block_name, drag_type, $this){
        url = '/builder/create_workout_block';
        $.get(url, {lib_id: block_name, block_name: block_name, drag_type: drag_type}, function (data) {
          console.log(data);
          console.log(data.id);
          if(drag_type == "block"){
            $this.next('li').attr('id', "block_"+data.id);
            if(block_name == BLOCK_TYPE[2]){
              $this.next('li').attr('id', "block_"+data.id).append('<input type="hidden" name=block['+data.id+'][0] id="block_'+data.id+'_0" value=0>');  
            }
          }
          else if(block_name == BLOCK_TYPE[3]){
            $this.next('li').attr('id', "block_"+data.id+"_"+lib_id+"_"+data.lib_detail_id).append('<input type="hidden" name=block['+data.id+']['+lib_id+'] id="block_'+data.id+'_'+lib_id+'" value='+data.lib_detail_id+'>');
          }
          else{
            var block_id = $this.closest('li.main_container').attr('id').split("_")[1];
            console.log(block_id);
            console.log($this.next('li'));
            $this.next('li').attr('id', "block_"+block_id+"_"+lib_id+"_"+data.lib_detail_id).append('<input type="hidden" name=block['+block_id+']['+lib_id+'] id="block_'+block_id+'_'+lib_id+'" value='+data.lib_detail_id+'>');
          }
        });
    }
</script>


<%= render :partial => "workouts/builderscripts/calculate_builder_dimensions" %>
